{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","selectedGoods","selectedGoodsNames","this","className","length","join","type","onClick","event","setState","map","good","key","includes","selectedGood","target","parentElement","textOfSelectedGood","childNodes","wholeText","trim","filter","g","text","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,cAAe,GACfC,mBAAoB,IAJxB,uDAOY,IAAD,SAC8CC,KAAKJ,MAAlDE,EADD,EACCA,cAAeC,EADhB,EACgBA,mBAAoBF,EADpC,EACoCA,MAE3C,OACE,yBAAKI,UAAU,OACb,mDAIIF,EAAmBG,OACfH,EAAmBI,KAAK,MACxB,0BAIR,4BACEC,KAAK,SACLC,QAAS,SAACC,GACR,EAAKC,SAAS,CACZT,cAAe,GACfC,mBAAoB,OAL1B,SAYA,4BACGF,EAAMW,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EACLR,UAAS,UACJF,EAAmBY,SAASF,GAAQ,WAAa,KAErDA,EAEA,IAED,4BACEL,KAAK,SACLC,QAAS,SAACC,GACR,IAAMM,EAAeN,EAAMO,OAAOC,cAC5BC,EAAqBT,EAAMO,OAC9BC,cAAcE,WAAW,GACzBC,UAAUC,OAETpB,EAAca,SAASC,IAI3B,EAAKL,UAAS,SAAAX,GAAK,MAAK,CACtBE,cAAc,GAAD,mBACRF,EAAME,eADE,CAEXc,IAEFb,mBAAmB,GAAD,mBACbH,EAAMG,oBADO,CAEhBgB,UAnBR,UA2BC,IAED,4BACEX,KAAK,SACLC,QAAS,SAACC,GACR,IAAMM,EAAeN,EAAMO,OAAOC,cAC5BC,EAAqBT,EAAMO,OAC9BC,cAAcE,WAAW,GACzBC,UAAUC,OAERpB,EAAca,SAASC,IAI5B,EAAKL,UAAS,SAAAX,GAAK,MAAK,CACtBE,cAAe,YAAIF,EAAME,eACtBqB,QAAO,SAAAC,GAAC,OAAIA,IAAMR,KACrBb,mBAAoB,YAAIH,EAAMG,oBAC3BoB,QAAO,SAAAE,GAAI,OAAIA,IAASN,WAhBjC,eA0BLrB,EAAgBQ,YApGzB,GAAyBoB,IAAMC,WCZ/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.61734a75.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    selectedGoods: [],\n    selectedGoodsNames: [],\n  }\n\n  render() {\n    const { selectedGoods, selectedGoodsNames, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected goods:\n          {`\\n`}\n          {\n            selectedGoodsNames.length\n              ? selectedGoodsNames.join(', ')\n              : \"Anything wasn't select\"\n          }\n        </h1>\n\n        <button\n          type=\"button\"\n          onClick={(event) => {\n            this.setState({\n              selectedGoods: [],\n              selectedGoodsNames: [],\n            });\n          }}\n        >\n          Clear\n        </button>\n\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              className={\n                `${selectedGoodsNames.includes(good) ? 'selected' : ''}`}\n            >\n              {good}\n\n              {' '}\n\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  const selectedGood = event.target.parentElement;\n                  const textOfSelectedGood = event.target\n                    .parentElement.childNodes[0]\n                    .wholeText.trim();\n\n                  if (selectedGoods.includes(selectedGood)) {\n                    return;\n                  }\n\n                  this.setState(state => ({\n                    selectedGoods: [\n                      ...state.selectedGoods,\n                      selectedGood,\n                    ],\n                    selectedGoodsNames: [\n                      ...state.selectedGoodsNames,\n                      textOfSelectedGood,\n                    ],\n                  }));\n                }}\n              >\n                Select\n              </button>\n\n              {' '}\n\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  const selectedGood = event.target.parentElement;\n                  const textOfSelectedGood = event.target\n                    .parentElement.childNodes[0]\n                    .wholeText.trim();\n\n                  if (!selectedGoods.includes(selectedGood)) {\n                    return;\n                  }\n\n                  this.setState(state => ({\n                    selectedGoods: [...state.selectedGoods]\n                      .filter(g => g !== selectedGood),\n                    selectedGoodsNames: [...state.selectedGoodsNames]\n                      .filter(text => text !== textOfSelectedGood),\n                  }));\n                }}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}